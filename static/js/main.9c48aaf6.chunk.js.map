{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/authReducers.js","services/chatService.js","store/actions/chatActions.js","store/reducers/chatReducer.js","store/reducers/combinedReducer.js","store/index.js","services/api.js","services/authService.js","store/actions/authActions.js","components/chatComponents/Modal.jsx","components/chatComponents/Navigation.jsx","utils/helpers.js","components/chatComponents/ChatScreen/Friend.js","components/chatComponents/ChatScreen/FriendList.js","components/chatComponents/MessengerComponents/ChatHeader.js","components/chatComponents/MessengerComponents/Message/Message.js","components/chatComponents/MessengerComponents/MessageBox.js","components/chatComponents/MessengerComponents/MessageInput.js","components/chatComponents/ChatScreen/Messenger.js","components/chatComponents/hooks/socketConnectHook.js","components/chatComponents/ChatComponent.jsx","components/AuthComponents/Login.jsx","components/AuthComponents/Register.jsx","components/AuthComponents/Landing.jsx","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","REGISTER","LOGOUT","UPDATE_PROFILE","intialState","user","JSON","parse","localStorage","getItem","token","isLoggedIn","authReducer","state","action","type","payload","console","log","ChatService","fetchChats","API","get","then","catch","uploadImages","data","post","headers","e","searchUsers","term","params","err","createChat","userId","FETCH_CHATS","SET_CURRENT_CHAT","FRIENDS_ONLINE","FRIEND_ONLINE","FRIEND_OFFLINE","MESSAGE_RECEIVED","CREATE_CHAT","SET_SOCKET","initialState","chats","currentChat","socket","newMessage","chatId","seen","scrollBottom","chatReducer","chatsCopy","map","chat","Users","includes","id","status","currentChatCopy","parseInt","message","newMesssage","User","Messages","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","axios","create","baseURL","interceptors","response","use","res","error","name","dispatch","logout","AuthService","login","setHeadersAndStorage","register","defaults","removeItem","updateProfileS","setItem","stringify","history","Modal","props","findByKey","key","children","child","className","Navbar","useSelector","useState","showModal","setShowModal","useDispatch","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","submitForm","preventDefault","updateFormObject","length","formData","FormData","append","style","maxHeight","src","avatar","alt","onClick","onSubmit","onChange","target","value","required","placeholder","userStatus","Friend","click","width","height","border","lastMessage","FriendList","showFriendsModal","setShowFriendsModal","suggestions","setSuggestions","openChat","setCurrentChat","prevState","onInput","searchFriends","emit","ChatHeader","showChatOptions","setShowChatOptions","icon","Message","index","fromUserId","determineMargin","borderRadius","margin","MessageBox","msgBox","useRef","useEffect","setTimeout","val","current","scrollHeight","scrollTop","ref","MessageInput","setMessage","image","setImage","fileUpload","sendMessage","imageUpload","msg","fromUser","toUserId","img","handleChange","onKeyDown","handleKeyDown","files","Error","url","handleImageUpload","Messenger","Object","keys","useSocket","forEach","reverse","SocketIOClient","connect","setSocket","on","friends","friendsOnline","friend","message_received","Chat","display","Login","push","to","Register","Landing","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oWAAaA,EAAQ,QACRC,EAAW,WACXC,EAAS,SACTC,EAAiB,iBCDxBC,EAAc,CAChBC,KAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GACnDC,MAAQF,aAAaC,QAAQ,UAAY,GACzCE,aAAYH,aAAaC,QAAQ,SA2CtBG,EArCK,WAA8B,IAA7BC,EAA4B,uDAAtBT,EAAYU,EAAU,uCACtCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QACb,OAAOD,GACH,KAAKf,EAQL,KAAKC,EACD,OAAO,2BACAY,GADP,IAEIR,KAAKW,EAAQX,KACbK,MAAMM,EAAQN,MACdC,YAAY,IAEpB,KAAKT,EACD,kCACOW,GADP,IAEIR,KAAK,GACLK,MAAM,GACNC,YAAY,IAEpB,KAAKR,EAED,OADAc,QAAQC,IAAI,oBAAoBF,GACzB,2BACAH,GADP,IAEIR,KAAMW,IAGd,QACI,OAAOH,I,QCaJM,EAvDK,CAChBC,WAAY,WACR,OAAOC,EAAIC,IAAI,UACdC,OACAC,SAGLC,aAAa,SAACC,GAIV,OAAOL,EAAIM,KAAK,mBAAmBD,EAHnB,CACZE,QAAS,CAAC,eAAgB,mCAG7BL,MAAK,SAAAG,GAEF,MAAO,CAACA,WAGXF,OAAM,SAAAK,GAAK,MAAMA,MAGtBC,YAAa,SAACC,GAGV,OAAOV,EAAIC,IAAI,gBAAgB,CAC3BU,OAAO,CACHD,UAGPR,MAAM,YACH,OADc,EAATG,QAENF,OAAM,SAAAS,GACLhB,QAAQC,IAAI,8BAA+Be,OAMnDC,WAAY,SAACC,GAGT,OAFAlB,QAAQC,IAAI,8BAAgCiB,GAErCd,EAAIM,KAAK,gBAAgB,CAAC,UAAYQ,IAC5CZ,MAAM,YAAY,IAAVG,EAAS,EAATA,KAEL,OADAT,QAAQC,IAAI,iCAAmCQ,GACxCA,KACRF,OAAM,SAAAS,GACLhB,QAAQC,IAAI,8BAA+Be,QC9C1CG,EAAc,cACdC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAc,cAEdC,EAAa,aCJpBC,EAAe,CACjBC,MAAM,GACNC,YAAY,GACZC,OAAQ,GAGRC,WAAW,CAACC,OAAO,KAAKC,KAAK,MAC7BC,aAAa,GAgNFC,EA5MK,WAA8B,IAA7BvC,EAA4B,uDAAtB+B,EAAa9B,EAAS,uCAEtCC,EAAgBD,EAAhBC,KAAKC,EAAWF,EAAXE,QAEZ,OAAOD,GACH,KAAKqB,EACD,OAAO,2BACAvB,GADP,IAEIgC,MAAO7B,IAEf,KAAKqB,EACD,OAAO,2BACAxB,GADP,IAEIiC,YAAY9B,IAGpB,KAAKsB,EAED,IAAMe,EAAYxC,EAAMgC,MAAMS,KAAI,SAAAC,GAC9B,OAAO,2BACAA,GADP,IAEIC,MAAOD,EAAKC,MAAMF,KAAI,SAAAjD,GAClB,OAAGW,EAAQyC,SAASpD,EAAKqD,IACd,2BACArD,GADP,IAEIsD,OAAQ,WAITtD,UAKnB,OAAO,2BACAQ,GADP,IAEIgC,MAAOQ,IAIf,KAAKd,EACD,IAAIqB,EAAe,eAAQ/C,EAAMiC,aAC3BO,EAAYxC,EAAMgC,MAAMS,KAAI,SAAAC,GAC1B,IAAMC,EAAQD,EAAKC,MAAMF,KAAI,SAAAjD,GAEzB,OAAGA,EAAKqD,KAAKG,SAAS7C,EAAQ0C,IACnB,2BACArD,GADP,IAEIsD,OAAQ,WAITtD,KAUX,OAPGkD,EAAKG,KAAOE,EAAgBF,KAC3BE,EAAe,2BACRA,GADQ,IAEXJ,WAID,2BACAD,GADP,IAEIC,aAMZ,OAAO,2BACA3C,GADP,IAEIgC,MAAOQ,EACPP,YAAac,IAMrB,KAAKpB,EACD,IAAIoB,EAAe,eAAQ/C,EAAMiC,aAC3BO,EAAYxC,EAAMgC,MAAMS,KAAI,SAAAC,GAC1B,IAAMC,EAAQD,EAAKC,MAAMF,KAAI,SAAAjD,GAEzB,OAAGA,EAAKqD,KAAKG,SAAS7C,EAAQ0C,IACnB,2BACArD,GADP,IAEIsD,OAAQ,YAITtD,KAUX,OAPGkD,EAAKG,KAAOE,EAAgBF,KAC3BE,EAAe,2BACRA,GADQ,IAEXJ,WAID,2BACAD,GADP,IAEIC,aAMZ,OAAO,2BACA3C,GADP,IAEIgC,MAAOQ,EACPP,YAAac,IAMrB,KAAKjB,EAED,OAAO,2BACA9B,GADP,IAEIkC,OAAS/B,IAIjB,KAAKyB,EACD,IAAOqB,EAAmB9C,EAAnB8C,QAAS3B,EAAUnB,EAAVmB,OACZyB,EAAe,eAAQ/C,EAAMiC,aAE7BE,EAAU,eAAOnC,EAAMkD,aACvBZ,EAAetC,EAAMsC,aAEnBE,EAAYxC,EAAMgC,MAAMS,KAAI,SAAAC,GAE9B,OAAGO,EAAQb,SAAUM,EAAKG,IAGnBI,EAAQE,KAAKN,KAAKvB,EACjBgB,IAEAH,EAAa,CACTC,OAASM,EAAKG,GACdR,MAAK,GAKVY,EAAQb,SAAWW,EAAgBF,KAClCE,EAAe,2BACRA,GADQ,IAEXK,SAAS,GAAD,mBAAML,EAAgBK,UAAY,CAACH,OAI5C,2BACAP,GADP,IAEIU,SAAS,GAAD,mBAAMV,EAAKU,UAAa,CAACH,OAIlCP,KAGX,OAAGJ,IAAetC,EAAMsC,aAEb,2BACAtC,GADP,IAEIgC,MAAMQ,EACNP,YAAac,EACbZ,eAKD,2BACAnC,GADP,IAEIgC,MAAMQ,EACNP,YAAac,EACbZ,aACAG,iBAKR,KAAKT,EAID,OAHAzB,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,uBAAwBL,EAAMgC,OAEnC,2BACAhC,GADP,IAEIgC,MAAM,GAAD,mBAAKhC,EAAMgC,OAAU,CAAC7B,MAKnC,QACI,OAAOH,ICjNJqD,cAAgB,CAC3BtD,cACAwC,gBCDWe,EADDC,YAAYC,EAAYC,YAAgBC,MCChDlD,EAAOmD,IAAMC,OAAO,CACtBC,QAAQ,uCAGR9C,QAAQ,CAEJ,OAAU,mBACV,cAAgB,UAAhB,OAA2BpB,aAAaC,QAAQ,UAAY,OAIpEY,EAAIsD,aAAaC,SAASC,KACtB,SAAAC,GACI,OAAOA,KAEX,SAAA7C,GACI,IACI,GAA2B,MAAvBA,EAAI2C,SAASjB,OACb,MAAM1B,EAEV,GAAqC,cAAjCA,EAAI2C,SAASlD,KAAKqD,MAAMC,MACa,sBAAjC/C,EAAI2C,SAASlD,KAAKqD,MAAMC,KAGxB,MADAb,EAAMc,SAASC,KACTjD,EAMlB,MAAOA,GAEH,MADAhB,QAAQC,IAAI,kBAAkBe,GACxBA,MAQHZ,QC3CT8D,EAAc,CAChBC,MAAQ,SAAC1D,GACL,OAAOL,EAAIM,KAAK,SAAUD,GACbH,MAAK,YAAa,IAAVG,EAAS,EAATA,KAEL,OADA2D,EAAqB3D,GACdA,KAEVF,OAAM,SAAAS,GAEH,MADAhB,QAAQC,IAAI,wBAA0Be,GAChCA,MAI1BqD,SAAU,SAAC5D,GACP,OAAOL,EAAIM,KAAK,YAAaD,GAChBH,MAAK,YAAa,IAAVG,EAAS,EAATA,KAEL,OADA2D,EAAqB3D,GACdA,KAEVF,OAAM,SAAAS,GAEH,MADAhB,QAAQC,IAAI,iCAAmCe,GACzCA,MAI1BiD,OAAQ,WACJ7D,EAAIkE,SAAS3D,QAAb,aAAuC,GACvCpB,aAAagF,WAAW,QACxBhF,aAAagF,WAAW,UAI5BC,eAAgB,SAAC/D,GAOb,OAAOL,EAAIM,KAAK,gBAAiBD,GACpBH,MAAK,YAAa,IAAVG,EAAS,EAATA,KAEL,OADAlB,aAAakF,QAAQ,OAAOpF,KAAKqF,UAAUjE,IACpCA,KAEVF,OAAM,SAAAS,GAEH,MADAhB,QAAQC,IAAI,iCAAmCe,GACzCA,OAKxBoD,EAAuB,SAAC,GAAiB,IAAhBhF,EAAe,EAAfA,KAAKK,EAAU,EAAVA,MAChCW,EAAIkE,SAAS3D,QAAb,+BAAkDlB,GAClDF,aAAakF,QAAQ,OAAOpF,KAAKqF,UAAUtF,IAC3CG,aAAakF,QAAQ,QAAQhF,IAIlByE,ICnBFD,EAAS,SAAClD,EAAO4D,GAAR,OAAoB,SAAAX,GAEtCE,EAAYD,SACZD,EAAS,CAAClE,KAAKb,M,OCTJ2F,EAhCD,SAACC,GAEX,IAAMC,EAAY,SAACC,GACf,OAAOF,EAAMG,SAAS3C,KAAI,SAAA4C,GAElB,GAAGA,EAAMF,MAAMA,EACX,OAAOE,MAKvB,OACI,qBAAKC,UAAU,yBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,eAAf,SACKJ,EAAU,YAGf,qBAAKI,UAAU,aAAf,SACKJ,EAAU,UAGf,qBAAKI,UAAU,eAAf,SACKJ,EAAU,oBC2FpBK,EA/GA,WACX,IAAM/F,EAAOgG,aAAY,SAAAxF,GAAK,OAAEA,EAAMD,YAAYP,QAClD,EAAiCiG,oBAAS,GAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMvB,EAAWwB,cAcjB,GAbkBA,cAaeH,mBAASjG,EAAKqG,YAA/C,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA+BL,mBAASjG,EAAKuG,UAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAyBP,mBAASjG,EAAKyG,OAAvC,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAA+BT,mBAASQ,EAAME,UAAY,IAA1D,mBAAOA,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,SAACrF,GAChBA,EAAEsF,iBACF,IAAMC,EAAmB,CAACV,YAAUE,WAASE,SAC1CE,EAASK,OAAO,IAAGD,EAAiBJ,SAAWA,GAGlD,IFasBhF,EEbhBsF,EAAW,IAAIC,SAErB,IAAK,IAAMvB,KAAOoB,EAEdE,EAASE,OAAOxB,EAAIoB,EAAiBpB,IAKzCf,GFIsBjD,EEJCoF,EFIU,SAAAnC,GACrChE,QAAQC,IAAI,sBACZiE,EAAYM,eAAezD,GACdT,MAAM,SAAAG,GAEHT,QAAQC,IAAI,qBAAqBQ,GAEjCuD,EAAS,CAAClE,KAAKZ,EAAgBa,QAAQU,OAE1CF,OAAM,SAAAS,GACHhB,QAAQC,IAAI,2BAA2Be,UEXvD,OACI,sBAAKyB,GAAG,SAAR,UACI,mCAAK,qCAAO,qBAAK+D,MAAO,CAACC,UAAU,UAAUC,IAAI,iEAAjD,iBACA,sBAAKjE,GAAG,eAAR,UACI,qBAAKiE,IAAKtH,EAAKuH,OAAQC,IAAK,WAC5B,gDAAmBxH,EAAKqG,gBAG5B,gCACI,wBAAQoB,QArCQ,WACxBtB,GAAcD,IAoCN,4BACA,wBAAQuB,QA5CA,WAEhB7C,EAASC,MA0CD,uBAGFqB,GACE,eAAC,EAAD,WACI,cAAC,WAAD,UACI,mDADU,UAId,cAAC,WAAD,UACA,uBAAMwB,SAAUb,EAAhB,UACI,8BACI,uBACAc,SAAU,SAAAnG,GAAC,OAAE8E,EAAa9E,EAAEoG,OAAOC,QACnCA,MAAOxB,EACPyB,SAAS,WACTpH,KAAK,OACLqH,YAAY,iBAGhB,8BACI,uBACAJ,SAAU,SAAAnG,GAAC,OAAEgF,EAAYhF,EAAEoG,OAAOC,QAClCA,MAAOtB,EACPuB,SAAS,WACTpH,KAAK,OACLqH,YAAY,gBAGhB,8BACI,uBAAOJ,SAAU,SAAAnG,GAAC,OAAEkF,EAASlF,EAAEoG,OAAOC,QACtCA,MAAOpB,EACPqB,SAAS,WACTpH,KAAK,OACLqH,YAAY,YAGhB,8BACI,uBACAJ,SAAU,SAAAnG,GAAC,OAAEoF,EAAYpF,EAAEoG,OAAOC,QAClCA,MAAOlB,EACPjG,KAAK,OACLqH,YAAY,eAIZ,wBAAQN,QAASZ,EAAjB,wBArCO,QAyCf,cAAC,WAAD,4CAAc,iBC5GrBmB,G,MAAa,SAAChI,GAEvB,OADAY,QAAQC,IAAI,cAAgBb,EAAKsD,OAAQ,UAAWtD,EAAKqD,IAClC,WAAhBrD,EAAKsD,OAAsB,SAAS,YC4ChC2E,EAvCA,SAAC,GAAiB,IAAhB/E,EAAe,EAAfA,KAAKgF,EAAU,EAAVA,MAEZzF,EAAcuD,aAAY,SAAAxF,GAAK,OAAIA,EAAMuC,YAAYN,eAa3D,OACI,sBAAMgF,QAASS,EAAOpC,UAAS,sBAXxBrD,EAAYY,KAAKH,EAAKG,GAAK,SAAU,IAW5C,UACI,sBAAKyC,UAAU,cAAf,UACI,qBAAKqC,MAAM,KAAKC,OAAO,KAAKZ,IAAM,cAAcF,IAAI,8CAA8CF,MAAO,CAACiB,OAAO,SAEjH,sBAAKvC,UAAU,MAAf,UAAqB,+BAAM,+BAAK5C,EAAKC,MAAM,GAAGkD,UAAnB,IAA+BnD,EAAKC,MAAM,GAAGoD,cAExE,mBAAGT,UAAU,MAAb,SAfQ,WAChB,GAA2B,IAAxB5C,EAAKU,SAASoD,OAAc,MAAO,GAEtC,IAAMvD,EAAUP,EAAKU,SAASV,EAAKU,SAASoD,OAAO,GAEnD,MAAuB,UAAhBvD,EAAQ/C,KAAiB,SAAW+C,EAAQA,QAUvB6E,WAMxB,qBAAKxC,UAAU,gBAAf,SAEI,sBAAMA,UAAS,wBAAmBkC,EAAW9E,EAAKC,MAAM,KAAxD,qBCuFDoF,G,MAnHI,WACf,IAAM3D,EAAWwB,cACX5D,EAAQwD,aAAY,SAAAxF,GAAK,OAAIA,EAAMuC,YAAYP,SACrD5B,QAAQC,IAAI,kCAAmC2B,GAC/C,IAAME,EAASsD,aAAY,SAAAxF,GAAK,OAAIA,EAAMuC,YAAYL,UACtD,EAAgDuD,oBAAS,GAAzD,mBAAOuC,EAAP,KAAyBC,EAAzB,KACA,EAAsCxC,mBAAS,IAA/C,mBAAOyC,EAAP,KAAoBC,EAApB,KAoCMC,EAAW,SAAC1F,GAEdtC,QAAQC,IAAI,cAAeqC,GAC3B0B,EXDsB,SAAC1B,GAAD,OAAS,SAAA0B,GACnCA,EAAS,CAAClE,KAAMsB,EAAkBrB,QAASuC,KWA9B2F,CAAe3F,KAE5B,OACI,sBAAKG,GAAG,UAAR,UAEI,sBAAKA,GAAG,QAAR,UACI,oBAAIyC,UAAU,MAAd,qBAGA,wBAAQ2B,QAAS,kBAAMgB,GAAoB,SAAAK,GAAS,OAAKA,MAAzD,sBAGJ,uBAEA,qBAAKzF,GAAG,cAAR,SAEQb,EAAMwE,OAAS,EACTxE,EAAMS,KAAI,SAAAC,GACR,OAAO,cAAC,EAAD,CAAQgF,MAAO,kBAAMU,EAAS1F,IAAOA,KAAMA,GAAWA,EAAKG,OAEpE,mBAAGA,GAAG,UAAN,gCAKVmF,GACA,eAAC,EAAD,CAAON,MAAO,kBAAMO,GAAoB,IAAxC,UACI,cAAC,WAAD,UACI,oBAAI3C,UAAU,MAAd,+BADU,UAId,eAAC,WAAD,WAEI,oEAEA,uBACIiD,QAAS,SAACvH,GAAD,OAxEX,SAACA,GAEnBZ,QAAQC,IAAI,4BAA6BW,EAAEoG,OAAOC,OAClD/G,EAAYW,YAAYD,EAAEoG,OAAOC,OAC5B3G,MAAK,SAAAG,GACFT,QAAQC,IAAI,wBAAyBQ,GAErCsH,EAAetH,MAGlBF,OAAM,SAAAS,GAEH,MADAhB,QAAQC,IAAI,yCAA0Ce,GAChDA,KA4DsBoH,CAAcxH,IAC9Bd,KAAK,OACLqH,YAAY,uBAIZW,GAAeA,EAAY1B,OAAS,GACpC,8BAIQ0B,EAAYzF,KAAI,SAAAjD,GAEZ,OAAO,sBAAK8F,UAAU,aAAf,UACH,8BAAI9F,EAAKqG,UAAT,IAAqBrG,EAAKuG,YAC1B,wBAAQkB,QAAS,kBAtEnCpE,EAsEsDrD,EAAKqD,QApE7EvC,EAAYe,WAAWwB,GAClBnC,MAAK,SAAAsB,GAEFE,EAAOuG,KAAK,aAAazG,GACzBiG,GAAoB,MAGvBtH,OAAM,SAAAS,GACHhB,QAAQC,IAAIe,MAVH,IAACyB,GAsEkB,2BApBV,QA8Bd,cAAC,WAAD,GAAc,kB,QC5CnB6F,G,OAhEI,SAAC,GAAY,IAAXhG,EAAU,EAAVA,KACjB,EAA6C+C,oBAAS,GAAtD,mBAAOkD,EAAP,KAAuBC,EAAvB,KACA,EAAmDnD,oBAAS,GAA5D,mBACA,GADA,UACqDA,oBAAS,IAA9D,mBACA,GADA,UACqDA,oBAAS,IAA9D,6BAEA,OACI,eAAC,WAAD,WAGI,qBAAK5C,GAAG,UAAR,SAEQH,EAAKC,MAAMF,KAAI,SAAAjD,GAGX,OAAO,sBAAK8F,UAAU,eAAf,UACH,+BAAM9F,EAAKqG,UAAX,IAAuBrG,EAAKuG,YAC5B,qBAAKT,UAAU,iBAAf,SACI,sBAAMA,UAAS,wBAAmBkC,EAAWhI,gBAMjE,8BACI,wBAAQyH,QAAS,kBAAI2B,GAAoBD,IAAzC,wBAIAA,EACA,sBAAK9F,GAAG,WAAR,UACI,gCACI,cAAC,IAAD,CAAiBgG,KAAM,CAAC,MAAM,eAG9B,+CAGY,UAAZnG,EAAKxC,KACL,gCACA,cAAC,IAAD,CAAiB2I,KAAM,CAAC,MAAM,kBAG9B,8CAEC,6BAKL,gCACI,cAAC,IAAD,CAAiBA,KAAM,CAAC,MAAM,WAG9B,kDAGP,kCC/BFC,G,OA7BC,SAAC,GAAoC,IAAlCpG,EAAiC,EAAjCA,KAAMlD,EAA2B,EAA3BA,KAAMuJ,EAAqB,EAArBA,MAAO9F,EAAc,EAAdA,QAElC7C,QAAQC,IAAI,gBAAiBqC,EAAKC,MAAM,IAQxC,OACI,qBAAK2C,UAAS,kBAPM,WACpB,GAAIyD,EAAQ,IAAMrG,EAAKU,SAASoD,OAChC,OAAOvD,EAAQ+F,aAAetG,EAAKU,SAAS2F,EAAQ,GAAGC,WAAa,OAAS,QAKlDC,GAAb,YAAkChG,EAAQ+F,aAAexJ,EAAKqD,GAAK,UAAY,IAA7F,SAEI,sBAAK+D,MAAO,CAAEsC,aAAc,QAAU5D,UAAWrC,EAAQ+F,aAAexJ,EAAKqD,GAAK,QAAU,QAA5F,UAGQI,EAAQ+F,YAAcxJ,EAAKqD,GAAoC,oBAAI+D,MAAO,CAAEuC,OAAQ,OAArB,SAA+BzG,EAAKC,MAAM,GAAGkD,YAAkB,6BAI7G,SAAjB5C,EAAQ/C,KAAkB,oBAAG0G,MAAO,CAAEuC,OAAQ,OAApB,cAA+BlG,EAAQA,WAAe,qBAAK6D,IAAK7D,EAAQA,iBCgBvGmG,G,OAhCI,SAAC,GAAY,IAAX1G,EAAU,EAAVA,KAGX2G,EAASC,mBAEThH,EAAekD,aAAY,SAAAxF,GAAK,OAAGA,EAAMuC,YAAYD,gBAM3DiH,qBAAU,WACNC,YAAW,WALA,IAACC,IAMDJ,EAAOK,QAAQC,aAL1BN,EAAOK,QAAQE,UAAWH,IAMxB,OACJ,CAACnH,IAEH,IAAM9C,EAAOgG,aAAY,SAAAxF,GAAK,OAAIA,EAAMD,YAAYP,QACpD,OACI,qBAAKqD,GAAG,UAAUgH,IAAKR,EAAvB,SAGQ3G,EAAKU,SAASX,KAAI,SAACQ,EAAQ8F,GAEvB,OAAO,cAAC,EAAD,CAASlG,GAAK,UAAUH,KAAMA,EAAMlD,KAAMA,EAAMyD,QAASA,EAAS8F,MAAOA,GAAY9F,EAAQJ,WCmGzGiH,G,OA1HM,SAAC,GAAY,IAAXpH,EAAU,EAAVA,KAGnB,EAA6B+C,mBAAS,IAAtC,mBAAOxC,EAAP,KAAe8G,EAAf,KACA,EAA0BtE,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAGMzK,EAAOgG,aAAY,SAAAxF,GAAK,OAAGA,EAAMD,YAAYP,QAE7C0C,EAASsD,aAAY,SAAAxF,GAAK,OAAGA,EAAMuC,YAAYL,UAE/CgI,EAAYZ,mBAsDZa,EAAc,SAACC,GAEjB,KAAGnH,EAAQuD,OAAQ,IAAM4D,EAAzB,CAIA,IAAMC,EAAM,CACRnK,KAAOkK,EAAa,QAAU,OAC9BE,SAAW9K,EACX+K,SAAW7H,EAAKC,MAAMF,KAAI,SAAAjD,GAAI,OAAEA,EAAKqD,MACrCT,OAAQM,EAAKG,GACbI,QAASmH,GAA2BnH,GAMxCf,EAAOuG,KAAK,UAAU4B,GAGtBN,GAAW,SAAAM,GAAG,MAAE,MAChBJ,GAAS,SAAAO,GAAG,MAAI,QAGpB,OACI,sBAAK3H,GAAG,kBAAR,UACI,qBAAKA,GAAG,2BAOR,sBAAKA,GAAG,gBAAR,UACI,uBAAO3C,KAAK,OAAOmH,MAAOpE,EAASkE,SAAU,SAAAnG,GAAC,OArFtC,SAACA,GACjBA,EAAEsF,iBAEF,IAAMe,EAAQrG,EAAEoG,OAAOC,MACvB0C,EAAW1C,GAiF6CoD,CAAazJ,IAAI0J,UAAW,SAAA1J,GAAC,OA3EnE,SAACA,EAAGoJ,GAGT,UAAVpJ,EAAEmE,MAGDgF,EAAYC,GACZL,GAAW,SAAAM,GAEP,MAAO,MAGXJ,GAAS,SAAAO,GAAG,MAAI,MAEhBxJ,EAAEoG,OAAOC,MAAQ,IA6DkEsD,CAAc3J,IAAIuG,YAAY,2BAC7G,0CACA,uBAAO1E,GAAG,aAAagH,IAAKK,EAAYhK,KAAK,OAAOiH,SAAU,SAACnG,GAAD,OAAKiJ,EAASjJ,EAAEoG,OAAOwD,MAAM,OAC3F,sBAAK/H,GAAG,eAAR,UAEQmH,EAAM7F,KACN,sBAAKtB,GAAG,gBAAR,UACI,mBAAGyC,UAAU,MAAb,SAAoB0E,EAAM7F,OAC1B,wBAAQ8C,QAAS,SAACjG,GAAD,OA7DhB,SAACA,GAEtB,IAAMyF,EAAW,IAAIC,SACrBD,EAASE,OAAO,KAAKjE,EAAKG,IAC1B4D,EAASE,OAAO,QAAQqD,GAIxB1J,EAAYM,aAAa6F,GACxB/F,MAAK,SAAAG,GAGF,IAAIA,EAAM,MAAM,IAAIgK,MAAM,qBAC1BV,EAAYtJ,EAAKA,KAAKA,KAAKiK,QAE9BnK,OAAM,SAAAS,GAAG,OAAEhB,QAAQC,IAAIe,MA8CkB2J,IAAtB,oBACA,wBAAQ9D,QAAS,kBAAIgD,EAAS,KAA9B,uBACK,KAEb,wBAAQhD,QAAS,kBAAIiD,EAAWR,QAAQhC,SAAxC,sCClFLsD,G,OA7BG,WAEd,IAAMtI,EAAO8C,aAAY,SAAAxF,GAAK,OAAGA,EAAMuC,YAAYN,eAOnD,OACI,qBAAKY,GAAG,YAAYyC,UAAU,eAA9B,SAJO2F,OAAOC,KAAKxI,GAAM8D,OAAS,EAQxB,sBAAK3D,GAAG,iBAAR,UAEA,cAAC,EAAD,CAAYH,KAAMA,IAClB,uBACA,cAAC,EAAD,CAAYA,KAAMA,IAClB,cAAC,EAAD,CAAcA,KAAMA,OAGpB,4D,kBCqCHyI,OA9Df,SAAmB3L,EAAM4E,GACrBmF,qBAAU,WAENnF,GjBGwB,SAAAA,GAC5B,OAAO9D,EAAYC,aACVG,MAAM,SAAAG,GAaH,OAZAT,QAAQC,IAAI,yBAA0BQ,IACtCA,EAAOA,EAAKA,MAEPuK,SAAQ,SAAA1I,GACTA,EAAKC,MAAMyI,SAAQ,SAAA5L,GACfY,QAAQC,IAAI,UAAYb,EAAKqD,IAC7BrD,EAAKsD,OAAS,aAElBJ,EAAKU,SAASiI,aAGlBjH,EAAS,CAAClE,KAAMqB,EAAapB,QAASU,IAC/BA,KAGVF,OAAM,SAAAS,GACH,MAAMA,QiBrBTV,MAAK,SAAAuD,GAEF7D,QAAQC,IAAI,4BAA6B4D,GAEzC,IAAM/B,EAASoJ,KAAeC,QAAQ,yCAItCnH,EjBuCS,SAAClC,GAAD,OAAW,SAAAkC,GAChCA,EAAS,CAAClE,KAAM4B,EAAY3B,QAAS+B,KiBxChBsJ,CAAUtJ,IAGnB9B,QAAQC,IAAI,mCAEZ6B,EAAOuG,KAAK,OAAQjJ,GAEpB0C,EAAOuJ,GAAG,UAAU,SAACjM,GACjBY,QAAQC,IAAI,UAAWb,MAG3B0C,EAAOuJ,GAAG,iBAAiB,SAACC,GjBOZ,IAACC,EiBNbvL,QAAQC,IAAI,wBAAyBqL,GACrCtH,GjBKauH,EiBLaD,EjBKI,SAAAtH,GAC9CA,EAAS,CAAClE,KAAMuB,EAAgBtB,QAASwL,UiBF7BzJ,EAAOuJ,GAAG,WAAW,SAACjM,GjBYP,IAACoM,EiBXZxL,QAAQC,IAAI,8BAA+Bb,GAC3C4E,GjBUYwH,EiBVapM,EjBUH,SAAA4E,GACtCA,EAAS,CAAClE,KAAMyB,EAAgBxB,QAASyL,UiBP7B1J,EAAOuJ,GAAG,UAAU,SAACjM,GjBAP,IAACoM,EiBCXxL,QAAQC,IAAI,WAAYb,GACxB4E,GjBFWwH,EiBEapM,EjBFH,SAAA4E,GACrCA,EAAS,CAAClE,KAAKwB,EAAevB,QAASyL,UiBI3B1J,EAAOuJ,GAAG,YAAY,SAAAxI,GAClBmB,EjBeY,SAACnB,EAAQ3B,GAAT,OAAoB,SAAA8C,GAChDA,EAAS,CAAClE,KAAM0B,EAAkBzB,QAAS,CAAC8C,UAAQ3B,aiBhB3BuK,CAAiB5I,EAASzD,EAAKqD,QAG5CX,EAAOuJ,GAAG,YAAY,SAAA/I,GAClBtC,QAAQC,IAAI,2CAA6CqC,GACzD0B,EjBcM,SAAC1B,GAAD,OAAS,SAAA0B,GAC/BA,EAAS,CAAClE,KAAK2B,EAAc1B,QAAQuC,KiBfZrB,CAAWqB,UAO3B/B,OAAM,SAAAS,GAAG,OAAIhB,QAAQC,IAAI,6BAA8Be,QAM7D,CAACgD,KCAO0H,GAtCF,SAAC,GAAe,oBAAC,IAEpB1H,EAAWwB,cACXpG,EAAOgG,aAAY,SAAAxF,GAAK,OAAGA,EAAMD,YAAYP,QAanD,OAXA2L,GAAU3L,EAAK4E,GAYX,qCACA,cAAC,EAAD,IACA,qBAAKwC,MAAO,CAACe,MAAM,MAAMwB,OAAO,QAAhC,SACI,sBAAKvC,MAAO,CAACmF,QAAQ,OAAQnE,OAAO,QAApC,UACI,cAAC,EAAD,IACA,cAAC,EAAD,aCuBDoE,GA/DD,SAAC,GAAe,IAAdjH,EAAa,EAAbA,QACNX,EAAWwB,cAEjB,EAAyBH,mBAAS,IAAlC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAA+BT,mBAAS,IAAxC,mBAAOU,EAAP,KAAgBC,EAAhB,KA6BA,OACI,gCACI,uCACA,8BACI,uBAAMc,SA/BC,SAAClG,GAChBA,EAAEsF,iBACFlC,EbNa,SAACjD,EAAO4D,GAAR,OAAoB,SAACX,GAEtCE,EAAYC,MAAOpD,GACNT,MAAM,SAAAG,GACHT,QAAQC,IAAI,oBAAoBQ,GAEhCuD,EAAS,CAAClE,KAAMf,EAAOgB,QAASU,IAChCkE,EAAQkH,KAAK,QAEhBtL,OAAM,SAAAS,GACHhB,QAAQC,IAAI,6BAA8Be,OaJ7CmD,CAAM,CAAC0B,QAAME,YAAUpB,IAsBhC3E,QAAQC,IAAI,gBAAZ,kBAAyC4F,EAAzC,sBAA4DE,KAOpD,UACI,8BACI,uBAAOkB,MAAOpB,EAAOqB,SAAS,WAC9BpH,KAAK,OACLiH,SAAW,SAAAnG,GAAC,OAAGkF,EAASlF,EAAEoG,OAAOC,QACjCE,YAAY,kBAGhB,8BACI,uBAAOF,MAAOlB,EAAUmB,SAAS,WACjCpH,KAAK,OACLiH,SAAU,SAAAnG,GAAC,OAAGoF,EAAYpF,EAAEoG,OAAOC,QACnCE,YAAY,eAGhB,2CAEA,8BACI,gEAAkC,cAAC,IAAD,CAAM2E,GAAG,YAAT,oCCO3CC,GAlEE,SAAC,GAAe,IAAdpH,EAAa,EAAbA,QACTX,EAAWwB,cACjB,EAAiCH,mBAAS,IAA1C,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA+BL,mBAAS,IAAxC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAyBP,mBAAS,IAAlC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAA+BT,mBAAS,IAAxC,mBAAOU,EAAP,KAAgBC,EAAhB,KAMA,OACI,gCACA,+CACA,gCACI,uBAAMc,SATK,SAAClG,GAChBA,EAAEsF,iBACFlG,QAAQC,IAAI,kBAAmB,CAACwF,YAAUE,WAASE,QAAME,aACzD/B,EdYgB,SAACjD,EAAO4D,GAAR,OAAoB,SAAAX,GAExCE,EAAYG,SAAStD,GACRT,MAAK,SAAAG,GACFT,QAAQC,IAAI,uBAAuBQ,GACnCuD,EAAS,CAAClE,KAAKd,EAAUe,QAAQU,IACjCkE,EAAQkH,KAAK,QAEhBtL,OAAM,SAAAS,GACHhB,QAAQC,IAAI,6BAA6Be,OcrB5CqD,CAAS,CAACoB,YAAUE,WAASE,QAAME,YAAUpB,KAMlD,UACI,8BACI,uBACAoC,SAAU,SAAAnG,GAAC,OAAE8E,EAAa9E,EAAEoG,OAAOC,QACnCA,MAAOxB,EACPyB,SAAS,WACTpH,KAAK,OACLqH,YAAY,iBAGhB,8BACI,uBACAJ,SAAU,SAAAnG,GAAC,OAAEgF,EAAYhF,EAAEoG,OAAOC,QAClCA,MAAOtB,EACPuB,SAAS,WACTpH,KAAK,OACLqH,YAAY,gBAGhB,8BACI,uBAAOJ,SAAU,SAAAnG,GAAC,OAAEkF,EAASlF,EAAEoG,OAAOC,QACtCA,MAAOpB,EACPqB,SAAS,WACTpH,KAAK,OACLqH,YAAY,YAGhB,8BACI,uBACAJ,SAAU,SAAAnG,GAAC,OAAEoF,EAAYpF,EAAEoG,OAAOC,QAClCA,MAAOlB,EACPmB,SAAS,WACTpH,KAAK,OACLqH,YAAY,eAGhB,8BACI,uBAAOA,YAAY,wBAGvB,iDAGJ,2DAA6B,cAAC,IAAD,CAAM2E,GAAG,SAAT,qBAA7B,c,kCCrCGE,GApBC,SAAC,GAAiC,EAA/BC,UAAgC,IAAXpH,EAAU,mBACxCnF,EAAa0F,aAAY,SAAAxF,GAAK,OAAGA,EAAMD,YAAYD,cAGzD,OAFAM,QAAQC,IAAIP,EAAY,mCAItB,cAAC,KAAD,2BAAYmF,GAAZ,IACMqH,OAAW,SAACrH,GACZ,OAAGnF,EACQ,cAAC,GAAD,eAAUmF,IAGV,cAAC,KAAD,CAAUiH,GAAG,gBCWrBK,OAnBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKjH,UAAU,MAAf,SAEE,eAAC,KAAD,WAEE,cAAC,GAAD,CAASkH,OAAK,EAACC,KAAK,IAAIJ,UAAWP,KACnC,cAAC,KAAD,CAAOU,OAAK,EAACC,KAAK,SAASJ,UAAWL,KACtC,cAAC,KAAD,CAAOS,KAAK,YAAYJ,UAAWF,KACnC,cAAC,KAAD,CAAOG,OAAQ,kBAAI,+DCRdI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlM,MAAK,YAAkD,IAA/CmM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,IAAD,CAAU7J,MAAOA,EAAjB,SACE,cAAC,GAAD,QAIJ8J,SAASC,eAAe,SAM1BX,M","file":"static/js/main.9c48aaf6.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';","import { LOGOUT, LOGIN, UPDATE_PROFILE,REGISTER } from '../actions/actionTypes';\r\n\r\nconst intialState = {\r\n    user : JSON.parse(localStorage.getItem('user')) || {},\r\n    token : localStorage.getItem('token') || '',\r\n    isLoggedIn: localStorage.getItem('user') ? true :false,\r\n    //isLoggedIn : !localStorage.getItem('user')\r\n\r\n    //tocheck multiple sockets\r\n    \r\n}\r\nconst authReducer = (state=intialState,action) =>{\r\n    const {type, payload} = action;\r\n    switch(type) {\r\n        case LOGIN :\r\n            //return new login state of user\r\n            return {\r\n                ...state,\r\n                user: payload.user,\r\n                token: payload.token,\r\n                isLoggedIn: true\r\n            }\r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                user:payload.user,\r\n                token:payload.token,\r\n                isLoggedIn: true\r\n            }\r\n        case LOGOUT:\r\n            return{\r\n                ...state,\r\n                user:{},\r\n                token:'',\r\n                isLoggedIn: false\r\n            }\r\n        case UPDATE_PROFILE:\r\n            console.log(\"from reducer up: \",payload);\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import API from './api';\r\n\r\nconst ChatService = {\r\n    fetchChats: ()=>{\r\n        return API.get('/chats')\r\n        .then()\r\n        .catch()\r\n    },\r\n\r\n    uploadImages:(data)=>{\r\n        const headers = {\r\n            headers: {'Content-Type': 'application/x-from-urlencoded'}\r\n        }\r\n        return API.post('/chats/uploadImg',data,headers)\r\n        .then(data=>{\r\n            // console.log(\"chat Service: got data from the image upload backend \" , data.data.url);\r\n            return {data}\r\n\r\n        })\r\n        .catch(e=> {throw e;})\r\n    }\r\n    ,\r\n    searchUsers: (term)=>{\r\n\r\n        \r\n        return API.get('/users/search',{\r\n            params:{\r\n                term\r\n            }\r\n        })\r\n        .then( ({data}) =>{\r\n            return data;\r\n        }).catch(err=>{\r\n            console.log(\"err from chatServcie search\", err);\r\n            \r\n        })\r\n\r\n    },\r\n\r\n    createChat: (userId)=>{\r\n        console.log(\"creating a chat with userid\" , userId);\r\n\r\n        return API.post('/chats/create',{\"partnerID\":userId})\r\n        .then( ({data}) =>{\r\n            console.log(\"created new chat from services\" , data);\r\n            return data;\r\n        }).catch(err=>{\r\n            console.log(\"err from chatServcie search\", err);\r\n            \r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ChatService;","import ChatService from \"../../services/chatService\";\r\nexport const FETCH_CHATS = 'FETCH_CHATS';\r\nexport const SET_CURRENT_CHAT = 'SET_CURRENT_CHAT';\r\nexport const FRIENDS_ONLINE = 'FRIENDS_ONLINE';\r\nexport const FRIEND_ONLINE = 'FRIEND_ONLINE';\r\nexport const FRIEND_OFFLINE = 'FRIEND_OFFLINE';\r\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\r\nexport const CREATE_CHAT = 'CREATE_CHAT';\r\n\r\nexport const SET_SOCKET = 'SET_SOCKET';\r\n\r\n\r\nexport const fetchChats = () => dispatch =>{\r\n    return ChatService.fetchChats()\r\n            .then( data =>{\r\n                console.log(\"data from chat actions\", data);\r\n                data = data.data;\r\n\r\n                data.forEach(chat=>{\r\n                    chat.Users.forEach(user=>{\r\n                        console.log(\"user id\" , user.id);\r\n                        user.status = 'offline'\r\n                    })\r\n                    chat.Messages.reverse();\r\n                })\r\n\r\n                dispatch({type: FETCH_CHATS, payload: data})\r\n                return data;\r\n\r\n            })\r\n            .catch(err=>{\r\n                throw err\r\n            });\r\n}\r\n\r\n//action to get \r\nexport const getOnlineFriends = (friendsOnline) =>dispatch=> {\r\n    dispatch({type: FRIENDS_ONLINE, payload: friendsOnline})\r\n}\r\n\r\n\r\nexport const isFriendOnline = (friend) =>dispatch=> {\r\n    dispatch({type:FRIEND_ONLINE, payload: friend})\r\n}\r\n\r\n\r\n\r\nexport const isFriendOffline = (friend) =>dispatch=> {\r\n    dispatch({type: FRIEND_OFFLINE, payload: friend})\r\n}\r\n\r\n\r\n\r\nexport const setCurrentChat = (chat) =>dispatch=> {\r\n    dispatch({type: SET_CURRENT_CHAT, payload: chat})\r\n}\r\n\r\nexport const setSocket = (socket) =>dispatch=> {\r\n    dispatch({type: SET_SOCKET, payload: socket})\r\n}\r\n\r\n\r\nexport const message_received = (message,userId) => dispatch =>{\r\n    dispatch({type: MESSAGE_RECEIVED, payload: {message,userId}})\r\n}\r\n\r\nexport const createChat = (chat) =>dispatch =>{\r\n    dispatch({type:CREATE_CHAT , payload:chat})\r\n}","import { CREATE_CHAT, FETCH_CHATS,MESSAGE_RECEIVED,SET_CURRENT_CHAT } from \"../actions/chatActions\";\r\n\r\n\r\nimport { FRIENDS_ONLINE, FRIEND_ONLINE, FRIEND_OFFLINE ,SET_SOCKET } from \"../actions/chatActions\";\r\n\r\nconst initialState = {\r\n    chats:[],\r\n    currentChat:{},\r\n    socket: {},\r\n\r\n    //\r\n    newMessage:{chatId:null,seen:null},\r\n    scrollBottom:0\r\n}\r\n\r\n\r\nconst chatReducer = (state=initialState,action)=>{\r\n    \r\n    const {type,payload} = action;\r\n\r\n    switch(type){\r\n        case FETCH_CHATS:\r\n            return {\r\n                ...state,\r\n                chats: payload\r\n            }\r\n        case SET_CURRENT_CHAT:\r\n            return {\r\n                ...state,\r\n                currentChat:payload\r\n            }\r\n\r\n        case FRIENDS_ONLINE:{\r\n            //make an new copy of chats's array with status of each friend as online\r\n            const chatsCopy = state.chats.map(chat =>{\r\n                return {\r\n                    ...chat,\r\n                    Users: chat.Users.map(user=>{\r\n                        if(payload.includes(user.id)){\r\n                            return {\r\n                                ...user,\r\n                                status: 'online'\r\n                            }\r\n                        }\r\n\r\n                        return user;\r\n                    })\r\n                }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                chats: chatsCopy\r\n            }\r\n        }\r\n        \r\n        case FRIEND_ONLINE: {\r\n            let currentChatCopy = { ...state.currentChat}\r\n            const chatsCopy = state.chats.map(chat => {\r\n                    const Users = chat.Users.map(user=>{\r\n                        // we are getting a user object as payload\r\n                        if(user.id===parseInt(payload.id)){\r\n                            return {\r\n                                ...user,\r\n                                status: 'online'\r\n                            }\r\n                        }\r\n\r\n                        return user;\r\n                    })\r\n\r\n                    if(chat.id === currentChatCopy.id){\r\n                        currentChatCopy ={\r\n                            ...currentChatCopy,\r\n                            Users\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        ...chat,\r\n                        Users\r\n                    }\r\n                \r\n                }\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                chats: chatsCopy,\r\n                currentChat: currentChatCopy\r\n\r\n            }\r\n\r\n        }\r\n\r\n        case FRIEND_OFFLINE: {\r\n            let currentChatCopy = { ...state.currentChat}\r\n            const chatsCopy = state.chats.map(chat => {\r\n                    const Users = chat.Users.map(user=>{\r\n                        // we are getting a user object as payload\r\n                        if(user.id===parseInt(payload.id)){\r\n                            return {\r\n                                ...user,\r\n                                status: 'offline'\r\n                            }\r\n                        }\r\n\r\n                        return user;\r\n                    })\r\n\r\n                    if(chat.id === currentChatCopy.id){\r\n                        currentChatCopy ={\r\n                            ...currentChatCopy,\r\n                            Users\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        ...chat,\r\n                        Users\r\n                    }\r\n                \r\n                }\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                chats: chatsCopy,\r\n                currentChat: currentChatCopy\r\n\r\n            }\r\n\r\n        }\r\n\r\n        case SET_SOCKET: {\r\n\r\n            return {\r\n                ...state,\r\n                socket : payload\r\n            }\r\n        }\r\n\r\n        case MESSAGE_RECEIVED: {\r\n            const {message, userId} = payload\r\n            let currentChatCopy  = {...state.currentChat};\r\n\r\n            let newMessage = {...state.newMesssage}\r\n            let scrollBottom = state.scrollBottom;\r\n\r\n            const chatsCopy = state.chats.map(chat=>{\r\n                \r\n                if(message.chatId ===chat.id){\r\n\r\n\r\n                    if(message.User.id===userId){\r\n                        scrollBottom++;\r\n                    }else{\r\n                        newMessage = {\r\n                            chatId : chat.id,\r\n                            seen:false\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(message.chatId === currentChatCopy.id){\r\n                        currentChatCopy = {\r\n                            ...currentChatCopy,\r\n                            Messages: [...currentChatCopy.Messages,...[message]]\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        ...chat,\r\n                        Messages: [...chat.Messages, ...[message]]\r\n                    }\r\n                }\r\n\r\n                return chat\r\n            });\r\n\r\n            if(scrollBottom===state.scrollBottom){\r\n\r\n                return {\r\n                    ...state,\r\n                    chats:chatsCopy,\r\n                    currentChat: currentChatCopy,\r\n                    newMessage,\r\n                    \r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                chats:chatsCopy,\r\n                currentChat: currentChatCopy,\r\n                newMessage,\r\n                scrollBottom\r\n            }\r\n\r\n        }\r\n\r\n        case CREATE_CHAT :{\r\n            console.log(\"pyaload\" ,payload);\r\n            console.log(\"chats look like this\", state.chats);\r\n\r\n            return {\r\n                ...state,\r\n                chats:[...state.chats, ...[payload]]\r\n            }\r\n        }\r\n\r\n\r\n        default:{\r\n            return state\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default chatReducer;","import {combineReducers} from 'redux';\r\n\r\nimport authReducer from './authReducers';\r\nimport chatReducer from './chatReducer';\r\nexport default combineReducers({\r\n    authReducer,\r\n    chatReducer\r\n});","import {createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/combinedReducer';\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\nexport default store;\r\n","import axios from 'axios';\r\nimport { useStore } from 'react-redux';\r\nimport store from '../store';\r\nimport { logout } from '../store/actions/authActions';\r\n\r\nconst API  = axios.create({\r\n    baseURL:'https://db-for-fastext.herokuapp.com',\r\n    //baseURL:'http://localhost:3001',\r\n\r\n    headers:{\r\n\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\r\n    }\r\n})\r\n\r\nAPI.interceptors.response.use(\r\n    res=>{\r\n        return res;\r\n    },\r\n    err => {\r\n        try{\r\n            if (err.response.status!== 401){\r\n                throw err;\r\n            }\r\n            if (err.response.data.error.name !== 'undefined') {\r\n                if( err.response.data.error.name === 'TokenExpiredError'){\r\n                    //log out user and make him log in again\r\n                    store.dispatch(logout())\r\n                    throw err \r\n                    \r\n                }\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            console.log('error in api.js',err)\r\n            throw err\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n)\r\n\r\nexport default API;","import API from './api';\r\n\r\nconst AuthService = {\r\n    login : (data) =>{\r\n        return API.post('/login', data)\r\n                    .then(({ data })=>{\r\n                        setHeadersAndStorage(data);\r\n                        return data;\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(\"Auth service error : \" , err);\r\n                        throw err;\r\n                    })\r\n    },\r\n\r\n    register: (data) =>{\r\n        return API.post('/register', data)\r\n                    .then(({ data })=>{\r\n                        setHeadersAndStorage(data);\r\n                        return data;\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(\"Auth Register service error : \" , err);\r\n                        throw err;\r\n                    })\r\n    },\r\n\r\n    logout: () =>{\r\n        API.defaults.headers['Authrization'] = '';\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n\r\n    },\r\n    \r\n    updateProfileS: (data) =>{\r\n        /* const headers = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            } \r\n        }*/\r\n        \r\n        return API.post('/users/update', data,/* headers */)\r\n                    .then(({ data })=>{\r\n                        localStorage.setItem('user',JSON.stringify(data));\r\n                        return data;\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(\"Auth Register service error : \" , err);\r\n                        throw err;\r\n                    })\r\n    },\r\n}\r\n\r\nconst setHeadersAndStorage = ({user,token}) =>{\r\n    API.defaults.headers['Authorization'] = `Bearer ${token}`;\r\n    localStorage.setItem('user',JSON.stringify(user));\r\n    localStorage.setItem('token',token);\r\n\r\n}\r\n\r\nexport default AuthService;","\r\nimport AuthService from '../../services/authService';\r\n\r\nimport {LOGIN, REGISTER, LOGOUT, UPDATE_PROFILE} from './actionTypes';\r\n\r\n/* export const LOGIN = 'LOGIN';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'; */\r\n\r\n//login action\r\nexport const login = (params,history) => (dispatch) =>{\r\n\r\n    AuthService.login( params)\r\n                .then( data=>{\r\n                    console.log('from login action',data);\r\n\r\n                    dispatch({type: LOGIN, payload: data});\r\n                    history.push('/')\r\n                })\r\n                .catch(err=>{\r\n                    console.log(\"Authorization Action Error\", err);\r\n                })\r\n\r\n};\r\n//REGISTER ACTION   \r\nexport const register = (params,history) => dispatch =>{\r\n\r\n    AuthService.register(params)\r\n                .then(data=>{\r\n                    console.log('from register action',data);\r\n                    dispatch({type:REGISTER, payload:data});\r\n                    history.push('/');\r\n                })\r\n                .catch(err=>{\r\n                    console.log(\"Auth Register Action Error\",err);\r\n                })\r\n};\r\n\r\n//LOG OUT ACTION\r\n\r\nexport const logout = (params,history) => dispatch =>{\r\n    \r\n    AuthService.logout()\r\n    dispatch({type:LOGOUT});\r\n    \r\n}\r\n\r\n//update user\r\nexport const updateProfile = (params) => dispatch =>{\r\n    console.log('from update action');\r\n    AuthService.updateProfileS(params)\r\n                .then( data => {\r\n                    \r\n                    console.log('from update action',data);\r\n\r\n                    dispatch({type:UPDATE_PROFILE, payload:data});\r\n                })\r\n                .catch(err=>{\r\n                    console.log(\"Update user Action Error\",err);\r\n                })\r\n};\r\n","import React from 'react';\r\nimport { Fragment } from 'react';\r\n\r\nconst Modal = (props) => {\r\n\r\n    const findByKey = (key) =>{\r\n        return props.children.map(child=>{\r\n\r\n                if(child.key===key){\r\n                    return child;\r\n                }\r\n            \r\n        });\r\n    }\r\n    return (\r\n        <div className=\"modal-mask modal-close\">\r\n            <div className=\"modal-wrapper\">\r\n                <div className=\"modal-container\">\r\n                    <div className=\"modal-header\">\r\n                        {findByKey(\"header\")}\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\">\r\n                        {findByKey(\"body\")}\r\n                    </div>\r\n\r\n                    <div className=\"modal-footer\"> \r\n                        {findByKey(\"footer\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout,updateProfile } from '../../store/actions/authActions';\r\nimport Modal from './Modal';\r\n\r\n\r\nconst Navbar = () =>{\r\n    const user = useSelector(state=>state.authReducer.user);\r\n    const [showModal,setShowModal] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const dispatch2 = useDispatch();\r\n\r\n    const logoutClick = () =>{\r\n        //console.log(\"logging out user\", user.firstname)\r\n        dispatch(logout());\r\n\r\n    }\r\n\r\n    const updateProfileButton = () =>{\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    \r\n    const [firstname,setFirstname] = useState(user.firstname);\r\n    const [lastname,setLastname] = useState(user.lastname);\r\n    const [email,setEmail] = useState(user.email);\r\n    const [password,setPassword] = useState(email.password || '');\r\n    \r\n    const submitForm = (e)=> {\r\n        e.preventDefault();\r\n        const updateFormObject = {firstname,lastname,email};\r\n        if(password.length>0) updateFormObject.password = password;\r\n        ////console.log(updateFormObject);\r\n\r\n        const formData = new FormData();\r\n\r\n        for( const key in updateFormObject ){\r\n            //console.log(key,updateFormObject[key]);\r\n            formData.append(key,updateFormObject[key]);\r\n        }\r\n\r\n        ////console.log(\"Update called\", formData);\r\n\r\n        dispatch(updateProfile(updateFormObject))\r\n    }\r\n\r\n    return (\r\n        <div id=\"navbar\">\r\n            <h2> <span> <img style={{maxHeight:\"1.5rem\"}}src=\"https://image.flaticon.com/icons/png/512/1329/1329948.png\"/></span> Fastext.io</h2>\r\n            <div id=\"profile=menu\">\r\n                <img src={user.avatar} alt= \"Avatar\" />\r\n                <p> Logged in as, {user.firstname}</p>\r\n            </div>\r\n            {/* Nav bar has a dropdown with logout option */}\r\n            <div>\r\n                <button onClick={updateProfileButton}>Update profile</button>\r\n                <button onClick={logoutClick}>Logout</button>\r\n            </div>\r\n            \r\n            { showModal &&\r\n                <Modal>\r\n                    <Fragment key=\"header\">\r\n                        <h2> Update profile </h2>\r\n                    </Fragment>\r\n                    \r\n                    <Fragment key= \"body\">\r\n                    <form onSubmit={submitForm}>\r\n                        <div>\r\n                            <input \r\n                            onChange={e=>setFirstname(e.target.value)}\r\n                            value={firstname}\r\n                            required=\"required\"\r\n                            type='text'\r\n                            placeholder=\"First Name\"></input>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                            onChange={e=>setLastname(e.target.value)}\r\n                            value={lastname}\r\n                            required=\"required\"\r\n                            type='text'\r\n                            placeholder=\"Last Name\"></input>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input onChange={e=>setEmail(e.target.value)}\r\n                            value={email}\r\n                            required=\"required\"\r\n                            type='text' \r\n                            placeholder=\"Email\"></input>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <input \r\n                            onChange={e=>setPassword(e.target.value)}\r\n                            value={password}\r\n                            type='text'\r\n                            placeholder=\"Password\"></input>\r\n                        </div>\r\n\r\n                        \r\n                            <button onClick={submitForm}>Update</button>\r\n                        </form>\r\n                    \r\n                    </Fragment>\r\n                    <Fragment key=\"footer\">\r\n                        (You can update password too!)\r\n                    </Fragment>\r\n                    \r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const userStatus = (user) =>{\r\n    console.log(\"from helper\" , user.status, \"user id\", user.id);\r\n    return user.status === 'online' ? 'online':'offline';\r\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Chat from '../ChatComponent';\nimport './Friend.scss';\nimport { userStatus } from '../../../utils/helpers';\n\n\nconst Friend = ({chat,click}) =>{\n    //console.log(\"from friends component\" , chat);\n    const currentChat = useSelector(state => state.chatReducer.currentChat);\n\n    const isChatOpened = ()=>{\n        return currentChat.id===chat.id ? 'opened': '' ; \n    }\n    const lastMessage = () =>{\n        if(chat.Messages.length ===0 ) return '';\n\n        const message = chat.Messages[chat.Messages.length-1];\n\n        return message.type=== 'image'? 'image ' : message.message;\n\n    }\n    return (\n        <div  onClick={click} className={`friend-list ${isChatOpened()}`}>\n            <div className=\"friend-info\">\n                <img width='40' height='40' alt = 'User avatar' src=\"https://www.svgrepo.com/show/36350/user.svg\" style={{border:\"1px\"}}/>                 \n                \n                <div className='m-0'><span><h4>{chat.Users[0].firstname} {chat.Users[0].lastname}</h4></span>\n                \n                <p className='m-0'>{lastMessage()}</p>\n                \n                </div>\n                \n            </div>\n            \n            <div className=\"friend-status\">\n            \n                <span className={`online-status ${userStatus(chat.Users[0])}`}> </span>\n            \n            </div>\n            \n            \n        </div>\n    )\n}\n\nexport default Friend;\n","import React, { useState, Fragment } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './FriendList.scss';\r\nimport Friend from './Friend'\r\nimport { setCurrentChat } from '../../../store/actions/chatActions';\r\nimport Modal from '../Modal';\r\nimport ChatService from '../../../services/chatService';\r\n\r\n\r\nconst FriendList = () => {\r\n    const dispatch = useDispatch();\r\n    const chats = useSelector(state => state.chatReducer.chats)\r\n    console.log(\"From friends list componenet : \", chats);\r\n    const socket = useSelector(state => state.chatReducer.socket);\r\n    const [showFriendsModal, setShowFriendsModal] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    //to search for friends\r\n    const searchFriends = (e) => {\r\n\r\n        console.log(\"calling serach friends:  \", e.target.value)\r\n        ChatService.searchUsers(e.target.value)\r\n            .then(data => {\r\n                console.log(\"data from serachUsers\", data);\r\n\r\n                setSuggestions(data);\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(\"some error from Friendlist searchusers\", err);\r\n                throw err;\r\n            })\r\n\r\n    }\r\n\r\n    const addNewFriend = (id) => {\r\n        //should add this to the backend and update state\r\n        ChatService.createChat(id)\r\n            .then(chats => {\r\n                //dispatch these chats to redux state\r\n                socket.emit('add-friend',chats);\r\n                setShowFriendsModal(false);\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const openChat = (chat) => {\r\n        //opens a chat in messenger\r\n        console.log(\"clicked on \", chat);\r\n        dispatch(setCurrentChat(chat))\r\n    }\r\n    return (\r\n        <div id=\"friends\">\r\n\r\n            <div id=\"title\">\r\n                <h3 className=\"m-0\">\r\n                    Friends\r\n                </h3>\r\n                <button onClick={() => setShowFriendsModal(prevState => !prevState)}> Add </button>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div id=\"friends-box\">\r\n                {\r\n                    chats.length > 0\r\n                        ? chats.map(chat => {\r\n                            return <Friend click={() => openChat(chat)} chat={chat} key={chat.id} />\r\n                        })\r\n                        : <p id=\"no-chat\">No friends found</p>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                showFriendsModal &&\r\n                <Modal click={() => setShowFriendsModal(false)}>\r\n                    <Fragment key='header'>\r\n                        <h3 className=\"m-0\"> Create new chat</h3>\r\n\r\n                    </Fragment>\r\n                    <Fragment key='body'>\r\n\r\n                        <p> Find friends by searching for them</p>\r\n\r\n                        <input\r\n                            onInput={(e) => searchFriends(e)}\r\n                            type='text'\r\n                            placeholder=\"search for friends\"\r\n\r\n                        />\r\n                        {\r\n                            suggestions && suggestions.length > 1 &&\r\n                            <div >\r\n                                {\r\n\r\n\r\n                                    suggestions.map(user => {\r\n\r\n                                        return <div className=\"suggestion\">\r\n                                            <p>{user.firstname} {user.lastname}</p>\r\n                                            <button onClick={() => addNewFriend(user.id)}>Add</button>\r\n                                        </div>\r\n                                    })}\r\n\r\n                            </div>\r\n\r\n                        }\r\n\r\n\r\n                    </Fragment>\r\n                    <Fragment key='footer'>\r\n\r\n                    </Fragment>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport { Fragment,useState } from 'react';\r\nimport {userStatus} from '../../../utils/helpers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './ChatHeader.scss';\r\n\r\nconst ChatHeader = ({chat}) => {\r\n    const [showChatOptions,setShowChatOptions] = useState(false);\r\n    const [showAddFriendModal,setShowAddFriendModal] = useState(false);\r\n    const [showDeleteChatModal,setShowDeleteChatModal] = useState(false);\r\n    const [showLeaveChannel, setShowLeaveChannelModal] = useState(false);\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n        \r\n            <div id='chatter'>\r\n                {\r\n                    chat.Users.map(user=>{\r\n                        //console.log(\"user header \", user , userStatus(user))\r\n\r\n                        return <div className='chatter-info'>\r\n                            <h4 >{user.firstname} {user.lastname}</h4>\r\n                            <div className=\"chatter-status\">\r\n                                <span className={`online-status ${userStatus(user)}`}></span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }            \r\n            </div>\r\n            <div>\r\n                <button onClick={()=>setShowChatOptions(!showChatOptions)}> Options</button>\r\n            </div>\r\n            \r\n            {\r\n                showChatOptions ?\r\n                <div id='settings'>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={['fas','user-plus']}>\r\n\r\n                        </FontAwesomeIcon>\r\n                        <p>Add Friends</p>\r\n                    </div>\r\n                    {\r\n                        chat.type==='group'?\r\n                        <div>\r\n                        <FontAwesomeIcon icon={['fas','sign-out-alt']}>\r\n\r\n                        </FontAwesomeIcon>\r\n                        <p>Leave Chat</p>\r\n                        </div>\r\n                        :<></>\r\n                        \r\n                    }\r\n                    \r\n\r\n                    <div>\r\n                        <FontAwesomeIcon icon={['fas','trash']}>\r\n\r\n                        </FontAwesomeIcon>\r\n                        <p>Delete chat</p>\r\n                    </div>\r\n                </div>\r\n                :<></>\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ChatHeader;","import React from 'react';\r\nimport './Message.css';\r\n\r\n\r\nconst Message = ({ chat, user, index, message }) => {\r\n\r\n    console.log(\"from message \", chat.Users[0]);\r\n\r\n    const determineMargin = () => {\r\n        if (index + 1 === chat.Messages.length) return;\r\n        return message.fromUserId === chat.Messages[index + 1].fromUserId ? 'mb-5' : 'mb-10';\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`message ${determineMargin()} ${message.fromUserId === user.id ? 'creator' : ''}`} >\r\n\r\n            <div style={{ borderRadius: '20px' }} className={message.fromUserId === user.id ? 'owner' : 'other'}>\r\n\r\n                {\r\n                    message.fromUserId != user.id  /* && chat.type == 'group' */ ? <h6 style={{ margin: \"0px\" }}>{chat.Users[0].firstname}</h6> : <></>\r\n\r\n                }\r\n                {\r\n                    message.type === 'text' ? <p style={{ margin: \"0px\" }}> {message.message}</p> : <img src={message.message} />\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React,{useRef, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Message from './Message/Message';\r\n\r\nimport './MessageBox.scss';\r\n\r\n\r\n\r\nconst MessageBox = ({chat}) => {\r\n\r\n    //to scroll bottom \r\n    const msgBox = useRef();\r\n\r\n    const scrollBottom = useSelector(state=> state.chatReducer.scrollBottom);\r\n\r\n    const scroll = (val)=>{\r\n        msgBox.current.scrollTop =val;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            scroll(msgBox.current.scrollHeight);\r\n        },100)\r\n    },[scrollBottom])\r\n\r\n    const user = useSelector(state => state.authReducer.user);\r\n    return (\r\n        <div id=\"msg-box\" ref={msgBox}>\r\n\r\n            {\r\n                chat.Messages.map((message,index)=>{\r\n\r\n                    return <Message id = \"message\" chat={chat} user={user} message={message} index={index} key={message.id}/>\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBox;","import React, {useState,useRef} from 'react';\r\nimport './MessageInput.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useSelector } from 'react-redux';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ChatService from '../../../services/chatService';\r\n\r\nconst MessageInput = ({chat}) => {\r\n\r\n\r\n    const [message,setMessage] = useState('');\r\n    const [image, setImage] = useState('');\r\n\r\n\r\n    const user = useSelector(state=> state.authReducer.user);\r\n    //grabbing socket from the state that is saved\r\n    const socket = useSelector(state=> state.chatReducer.socket);\r\n\r\n    const fileUpload =useRef();\r\n\r\n\r\n    const handleChange= (e) =>{\r\n        e.preventDefault();\r\n\r\n        const value = e.target.value;\r\n        setMessage(value);\r\n\r\n        //also need to notify other users that this user is typing something\r\n         \r\n    }\r\n\r\n    const handleKeyDown = (e, imageUpload) => {\r\n        \r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n\r\n            sendMessage(imageUpload);\r\n            setMessage(msg=>{\r\n                //console.log(\"setting message to empty string\")\r\n                return '';\r\n            \r\n            });\r\n            setImage(img => '');\r\n            \r\n            e.target.value = '';\r\n        } \r\n        \r\n       \r\n    }\r\n\r\n    //handling image uploads\r\n\r\n    const handleImageUpload =(e)=>{\r\n\r\n        const formData = new FormData();\r\n        formData.append('id',chat.id);\r\n        formData.append('image',image);\r\n        \r\n        //console.log(\"hadling image upload form input\")\r\n        //sending via chat service image upload\r\n        ChatService.uploadImages(formData)\r\n        .then(data=>{\r\n\r\n            //console.log(\"received from post method \" , data.data.data.url);\r\n            if(!data) throw new Error(\"no data from post\")\r\n            sendMessage(data.data.data.url);\r\n        })\r\n        .catch(err=>console.log(err));\r\n\r\n    }\r\n\r\n    const sendMessage = (imageUpload) =>{\r\n        \r\n        if(message.length <1 && !imageUpload ) {\r\n            // this prevents empty messages\r\n            return ;\r\n        }  \r\n        const msg = {\r\n            type : imageUpload? 'image' : 'text',\r\n            fromUser : user,\r\n            toUserId : chat.Users.map(user=>user.id),\r\n            chatId: chat.id,\r\n            message: imageUpload ? imageUpload: message\r\n        }\r\n\r\n        \r\n\r\n        //send message through sockets\r\n        socket.emit('message',msg);\r\n\r\n\r\n        setMessage(msg=>'');\r\n        setImage(img => '');\r\n    }\r\n\r\n    return (\r\n        <div id=\"input-container\">\r\n            <div id=\"image-upload-container\">\r\n\r\n                \r\n\r\n\r\n\r\n            </div>\r\n            <div id=\"message-input\">\r\n                <input type='text' value={message} onChange={e=>handleChange(e)} onKeyDown={e=>handleKeyDown(e)} placeholder=\"Type your message here\" />\r\n                <button>Send</button>\r\n                <input id=\"chat-image\" ref={fileUpload} type='file' onChange={(e)=>setImage(e.target.files[0])}></input>\r\n                <div id=\"image-upload\">\r\n                    {\r\n                        image.name?\r\n                        <div id=\"image-details\">\r\n                            <p className='m-0'>{image.name}</p>\r\n                            <button onClick={(e)=>handleImageUpload(e)}>upload</button>\r\n                            <button onClick={()=>setImage('')}>cancel</button>\r\n                        </div> : null\r\n                    }\r\n                    <button onClick={()=>fileUpload.current.click()}> upload image</button>\r\n                </div>\r\n                {/* <FontAwesomeIcon  className='fa-icon' icon={['far','smile']}/> */}\r\n            </div>\r\n            {/* <h4>Chat input goes here</h4> */}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageInput;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ChatHeader from './../MessengerComponents/ChatHeader';\r\nimport MessageBox from './../MessengerComponents/MessageBox';\r\nimport MessageInput from './../MessengerComponents/MessageInput';\r\n\r\nimport './Messenger.scss'\r\n\r\n\r\nconst Messenger = () =>{\r\n\r\n    const chat = useSelector(state=> state.chatReducer.currentChat);\r\n    const isChatActive = () =>{\r\n        //returns true if a chat is present in reducer\r\n\r\n        return Object.keys(chat).length > 0;\r\n\r\n    }\r\n    return (\r\n        <div id=\"messenger\" className=\"shadow-light\">\r\n            \r\n            {\r\n                isChatActive()\r\n                ? <div id=\"messenger-wrap\" > \r\n                  \r\n                  <ChatHeader chat={chat} />\r\n                  <hr />\r\n                  <MessageBox chat={chat}/>\r\n                  <MessageInput chat={chat}/>\r\n\r\n                  </div>:\r\n                  <p>Select a friend to chat</p>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger;\r\n","import { useEffect } from \"react\";\r\nimport SocketIOClient from 'socket.io-client';\r\n\r\nimport { createChat, fetchChats, getOnlineFriends, isFriendOffline, isFriendOnline, message_received, setSocket } from '../../../store/actions/chatActions';\r\nimport { userStatus } from \"../../../utils/helpers\";\r\n\r\nfunction useSocket(user, dispatch) {\r\n    useEffect(() => {\r\n\r\n        dispatch(fetchChats())\r\n            .then(res => {\r\n\r\n                console.log(\"res from chat compoonent:\", res);\r\n\r\n                const socket = SocketIOClient.connect('https://db-for-fastext.herokuapp.com/')\r\n                //const socket = SocketIOClient.connect('http://localhost:3001')\r\n\r\n                //saves the socket to reducer state which can be grabbed from message input\r\n                dispatch(setSocket(socket));\r\n\r\n\r\n                console.log(\"from socket hook trying to join\")\r\n\r\n                socket.emit('join', user);\r\n\r\n                socket.on('typing', (user) => {\r\n                    console.log(\"Typing \", user);\r\n                })\r\n\r\n                socket.on('friendsOnline', (friends) => {\r\n                    console.log(\"from socket: friends \", friends);\r\n                    dispatch(getOnlineFriends(friends))\r\n                })\r\n\r\n\r\n                socket.on('offline', (user) => {\r\n                    console.log(\"from socket ,User offline  \", user);\r\n                    dispatch(isFriendOffline(user));\r\n                })\r\n\r\n\r\n                socket.on('online', (user) => {\r\n                    console.log(\"Online  \", user);\r\n                    dispatch(isFriendOnline(user));\r\n                })\r\n\r\n                socket.on('received', message => {\r\n                    dispatch(message_received(message, user.id))\r\n                });\r\n\r\n                socket.on('new-chat', chat => {\r\n                    console.log(\"request to create new chat [socket hook]\" , chat);\r\n                    dispatch(createChat(chat))\r\n                });\r\n\r\n\r\n            })\r\n\r\n\r\n            .catch(err => console.log(\"err from chat componenet: \", err));\r\n\r\n\r\n\r\n\r\n\r\n    }, [dispatch])\r\n}\r\n\r\nexport default useSocket;","import React,{useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from './Navigation';\r\n\r\nimport { fetchChats } from '../../store/actions/chatActions';\r\n\r\nimport Friend from './ChatScreen/Friend';\r\nimport FriendList from './ChatScreen/FriendList';\r\nimport Messenger from './ChatScreen/Messenger';\r\n\r\n//socket\r\n\r\nimport  useSocket  from './hooks/socketConnectHook';\r\n\r\n\r\nconst notLoggedIn  = ()=>{\r\n    return (\r\n        <div>\r\n            <Link to=\"/login\"> Login here</Link>\r\n            <br />\r\n            <Link to=\"/register\"> Register Here</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Chat = ({...props}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state=> state.authReducer.user);\r\n\r\n    useSocket(user,dispatch);\r\n\r\n    /* \r\n    Moving this to custom hook\r\n    useEffect(()=>{\r\n        dispatch(fetchChats())\r\n        .then(res=>console.log(\"res from chat compoonent:\" , res))\r\n        .catch(err=>console.log(\"err from chat componenet: \" , err));\r\n\r\n    }) */\r\n\r\n    return(\r\n        <>\r\n        <Navbar />\r\n        <div style={{width:\"80%\",margin:\"auto\"}}>\r\n            <div style={{display:\"flex\", height:\"80vh\"}} >\r\n                <FriendList />\r\n                <Messenger />\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n\r\n        </>\r\n        \r\n\r\n        \r\n        \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Chat;","import React,{useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthService from '../../services/authService';\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {login} from '../../store/actions/authActions';\r\n\r\n\r\nconst Login = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    \r\n    const submitForm = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(login({email,password},history));\r\n        \r\n        /* \r\n        .then(()=>{\r\n            history.push('/');\r\n        }) \r\n        ** MOVING THIS TO LOGIN DISPATCH ACTION ** \r\n        */\r\n\r\n        //props.history\r\n        /* AuthService.login({ email, password })\r\n                    .then(res=>{\r\n                        console.log(res);\r\n                    })\r\n                    .catch(err=>console.log(err)); */\r\n\r\n        /* axios.post('http://localhost:3001/login',\r\n        {email,password})\r\n        .then(res=>{\r\n            console.log(\"login post \" , res);\r\n        })\r\n        .catch(err=> console.log(err)); */\r\n        console.log('login clicked' , `email = ${email}, password=${password}`);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>Login</h2>\r\n            <div>\r\n                <form onSubmit={submitForm}>\r\n                    <div>\r\n                        <input value={email} required='required'\r\n                        type=\"text\"\r\n                        onChange={ e=> setEmail(e.target.value)} \r\n                        placeholder=\"Login Email\"></input>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <input value={password} required='required'\r\n                        type=\"text\"\r\n                        onChange={e=> setPassword(e.target.value) } \r\n                        placeholder=\"Password\"></input>\r\n                    </div>\r\n                    \r\n                    <button>Login</button>\r\n\r\n                    <div>\r\n                        <p> Don't have an account? Please <Link to=\"/register\">Register</Link></p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { useDispatch, useStore } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { register } from '../../store/actions/authActions';\r\n\r\nconst Register = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const [firstname,setFirstname] = useState('');\r\n    const [lastname,setLastname] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const submitForm = (e)=> {\r\n        e.preventDefault();\r\n        console.log(\"register called\", {firstname,lastname,email,password})\r\n        dispatch(register({firstname,lastname,email,password},history));\r\n    }\r\n    return(\r\n        <div>\r\n        <h2> Registration</h2>\r\n        <div>\r\n            <form onSubmit={submitForm}>\r\n                <div>\r\n                    <input \r\n                    onChange={e=>setFirstname(e.target.value)}\r\n                    value={firstname}\r\n                    required=\"required\"\r\n                    type='text'\r\n                    placeholder=\"First Name\"></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <input \r\n                    onChange={e=>setLastname(e.target.value)}\r\n                    value={lastname}\r\n                    required=\"required\"\r\n                    type='text'\r\n                    placeholder=\"Last Name\"></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <input onChange={e=>setEmail(e.target.value)}\r\n                    value={email}\r\n                    required=\"required\"\r\n                    type='text' \r\n                    placeholder=\"Email\"></input>\r\n                </div>\r\n                \r\n                <div>\r\n                    <input \r\n                    onChange={e=>setPassword(e.target.value)}\r\n                    value={password}\r\n                    required=\"required\"\r\n                    type='text'\r\n                    placeholder=\"Password\"></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <input placeholder=\"Re-enter Password\"></input>\r\n                </div>\r\n\r\n                <button>Register</button>\r\n            </form>\r\n\r\n            <p> Already have an account? <Link to=\"/login\"> Login!</Link> </p>\r\n\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport {Route, Redirect } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Chat from '../chatComponents/ChatComponent';\r\n\r\nconst Landing = ({ component: Comp , ...props}) =>{\r\n    const isLoggedIn = useSelector(state=> state.authReducer.isLoggedIn);\r\n    console.log(isLoggedIn, \"is logged in state from landing\")\r\n\r\n    return (\r\n      \r\n      <Route  {...props}     \r\n            render = { (props) => { \r\n            if(isLoggedIn){\r\n                return <Chat {...props}/> \r\n            } \r\n            else{\r\n                return <Redirect to='/login' />\r\n            }\r\n        }}\r\n      />\r\n\r\n    );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport './App.css';\r\nimport Chat from './components/chatComponents/ChatComponent';\r\nimport Login from './components/AuthComponents/Login';\r\nimport Register from './components/AuthComponents/Register';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Landing from './components/AuthComponents/Landing';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        \r\n        <Switch>\r\n          {/*<Route exact path='/' component={Chat} />*/}\r\n          <Landing exact path='/' component={Chat} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route path='/register' component={Register} />\r\n          <Route render={()=><h1>404 page not found</h1>}/>\r\n        </Switch>\r\n\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../src/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}